{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let LoggerService = /*#__PURE__*/(() => {\n  class LoggerService {\n    constructor() {\n      this.logs = [];\n    } // Log to console and store in memory\n\n\n    log(level, message, ...args) {\n      const timestamp = new Date().toISOString();\n      const formattedMessage = `${level} ${timestamp} ${message}`;\n      this.logs.push(formattedMessage);\n\n      switch (level) {\n        case 'DEBUG':\n          console.debug(formattedMessage, ...args);\n          break;\n\n        case 'INFO':\n          console.info(formattedMessage, ...args);\n          break;\n\n        case 'ERROR':\n          console.error(formattedMessage, ...args);\n          break;\n      } // Optionally save to local storage or send to backend\n\n\n      this.saveLogs();\n    }\n\n    debug(message, ...args) {\n      this.log('DEBUG', message, ...args);\n    }\n\n    info(message, ...args) {\n      this.log('INFO', message, ...args);\n    }\n\n    error(message, ...args) {\n      this.log('ERROR', message, ...args);\n    } // Save logs to local storage (for persistence)\n\n\n    saveLogs() {\n      localStorage.setItem('app_logs', JSON.stringify(this.logs));\n    } // Retrieve logs (for debugging or sending to backend)\n\n\n    getLogs() {\n      return this.logs;\n    }\n\n  }\n\n  LoggerService.ɵfac = function LoggerService_Factory(t) {\n    return new (t || LoggerService)();\n  };\n\n  LoggerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoggerService,\n    factory: LoggerService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoggerService;\n})();","map":null,"metadata":{},"sourceType":"module"}