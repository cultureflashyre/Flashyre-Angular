{"ast":null,"code":"import { Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.authCheckUrl = 'http://localhost:8000/check-auth/'; // New endpoint to check auth status\n    }\n\n    canActivate() {\n      return this.http.get(this.authCheckUrl, {\n        withCredentials: true\n      }).pipe(map(response => {\n        if (response.is_authenticated) {\n          return true; // User is authenticated\n        } else {\n          this.router.navigate(['/login-candidate']); // Redirect to login if not authenticated\n\n          return false;\n        }\n      }), catchError(() => {\n        this.router.navigate(['/login-candidate']); // Redirect on error (e.g., network failure)\n\n        return of(false);\n      }));\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}