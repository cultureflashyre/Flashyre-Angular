{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let BufferScreen = /*#__PURE__*/(() => {\n  class BufferScreen {\n    constructor() {\n      this.rootClassName = '';\n    }\n\n  }\n\n  BufferScreen.ɵfac = function BufferScreen_Factory(t) {\n    return new (t || BufferScreen)();\n  };\n\n  BufferScreen.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BufferScreen,\n    selectors: [[\"buffer-screen\"]],\n    inputs: {\n      rootClassName: \"rootClassName\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[\"id\", \"buffer-screen\", 1, \"buffer-screen-container1\", 3, \"ngClass\"], [\"id\", \"buffer-screen-container\", 1, \"buffer-screen-container2\"], [1, \"buffer-screen-container3\"], [1, \"buffer-screen-container4\"], [\"html\", \"<!DOCTYPE html>\\n<html lang='en'>\\n<head>\\n    <meta charset='UTF-8'>\\n    <meta name='viewport' content='width=device-width, initial-scale=1.0'>\\n    <title>Wave Sound Loader</title>\\n    <style>\\n        body {\\n            margin: 0;\\n            padding: 0;\\n            font-family: Arial, sans-serif;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            height: 100vh;\\n            background-color: #fff;\\n            overflow: hidden;\\n        }\\n\\n        /* Loading Overlay */\\n        .loading-overlay {\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            width: 441px;\\n            height: 291px;\\n        }\\n\\n        /* Sound Wave Loader */\\n        .circle-loader {\\n            display: flex;\\n            justify-content: space-between;\\n            align-items: flex-end;\\n            width: 100px;\\n            height: 80px; /* Increased overall height */\\n        }\\n\\n        .circle-loader div {\\n            position: relative;\\n            width: 8px;\\n            height: 50%; /* Increased line length */\\n            background-color: #444;\\n            border-radius: 4px;\\n            animation: wave 1.2s infinite ease-in-out;\\n        }\\n\\n        /* Animate each bar with delays to create wave motion */\\n        .circle-loader div:nth-child(1) { animation-delay: 0s; }\\n        .circle-loader div:nth-child(2) { animation-delay: 0.2s; }\\n        .circle-loader div:nth-child(3) { animation-delay: 0.4s; }\\n        .circle-loader div:nth-child(4) { animation-delay: 0.6s; }\\n        .circle-loader div:nth-child(5) { animation-delay: 0.8s; }\\n        .circle-loader div:nth-child(6) { animation-delay: 1s; }\\n\\n        /* Wave Motion Animation */\\n        @keyframes wave {\\n            0%, 100% {\\n                transform: scaleY(0.3);\\n                opacity: 0.7;\\n            }\\n            50% {\\n                transform: scaleY(1);\\n                opacity: 1;\\n            }\\n        }\\n\\n        /* Responsive Adjustments */\\n        @media screen and (max-width: 1024px) { /* Tablets and small desktops */\\n            .loading-overlay {\\n                width: 90%;\\n                height: auto;\\n            }\\n\\n            .circle-loader {\\n                width: 80px;\\n                height: 70px; /* Adjusted height for smaller screens */\\n            }\\n\\n            .circle-loader div {\\n                width: 7px;\\n                height: 60%;\\n            }\\n        }\\n\\n        @media screen and (max-width: 768px) { /* Tablets and large phones */\\n            .loading-overlay {\\n                width: 80%;\\n                height: auto;\\n            }\\n\\n            .circle-loader {\\n                width: 70px;\\n                height: 60px; /* Adjusted height for tablets */\\n            }\\n\\n            .circle-loader div {\\n                width: 6px;\\n                height: 60%;\\n            }\\n        }\\n\\n        @media screen and (max-width: 480px) { /* Small phones */\\n            .loading-overlay {\\n                width: 100%;\\n                height: auto;\\n            }\\n\\n            .circle-loader {\\n                width: 60px;\\n                height: 50px; /* Adjusted height for small screens */\\n            }\\n\\n            .circle-loader div {\\n                width: 5px;\\n                height: 60%;\\n            }\\n        }\\n    </style>\\n</head>\\n<body>\\n    <!-- Loading Overlay -->\\n    <div class='loading-overlay'>\\n        <div class='circle-loader'>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n            <div></div>\\n        </div>\\n    </div>\\n</body>\\n</html>\\n\"]],\n    template: function BufferScreen_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"dangerous-html\", 4);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.rootClassName);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{display:contents}.buffer-screen-container1[_ngcontent-%COMP%]{width:100%;height:400px;display:flex;position:relative;align-items:center;flex-direction:column;justify-content:center}.buffer-screen-container2[_ngcontent-%COMP%]{width:100%;height:auto;display:flex}.buffer-screen-container3[_ngcontent-%COMP%]{width:100%;height:auto}.buffer-screen-container4[_ngcontent-%COMP%]{display:contents}.buffer-screenroot-class-name[_ngcontent-%COMP%]{width:441px;height:291px;opacity:.1}@media (max-width: 1200px){.buffer-screen-container2[_ngcontent-%COMP%]{width:100%;height:auto;align-self:center}}@media (max-width: 479px){.buffer-screen-container2[_ngcontent-%COMP%]{width:100%;height:auto}}\"]\n  });\n  return BufferScreen;\n})();","map":null,"metadata":{},"sourceType":"module"}